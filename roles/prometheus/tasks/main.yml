- name: Check if Prometheus container exists
  community.docker.docker_container_info:
    name: "{{ prometheus_container_name }}"
  register: prometheus_container_status
  failed_when: false

- name: Stop Prometheus container if it exists
  community.docker.docker_container:
    name: "{{ prometheus_container_name }}"
    state: stopped
    image: "prom/prometheus:latest"
  when: prometheus_container_status.container is defined

- name: Remove Prometheus container if it exists
  community.docker.docker_container:
    name: "{{ prometheus_container_name }}"
    state: absent
    image: "prom/prometheus:latest"
  when: prometheus_container_status.container is defined

- name: Create Prometheus Docker volume if not exists
  community.docker.docker_volume:
    name: "{{ prometheus_data_volume }}"
  when: prometheus_data_volume_status.volume is not defined

- name: Create Prometheus configuration file from template
  ansible.builtin.template:
    src: "prometheus.yml.j2"
    dest: "/tmp/prometheus.yml"
    mode: "0644"

- name: Ensure /etc/prometheus directory exists
  ansible.builtin.file:
    path: /etc/prometheus
    state: directory
    mode: "0755"

- name: Ensure empty Prometheus targets file exists
  ansible.builtin.copy:
    dest: "/etc/prometheus/quickops-targets.json"
    content: "[]"
    mode: "0644"

- name: Deploy Prometheus container
  community.docker.docker_container:
    name: "{{ prometheus_container_name }}"
    image: "prom/prometheus:latest"
    ports:
      - "9090:9090"
    volumes:
      - "{{ prometheus_data_volume }}:/prometheus"
      - "/tmp/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "/etc/prometheus/quickops-targets.json:/etc/prometheus/quickops-targets.json"
    env:
      PROMETHEUS_CONFIG_FILE: "/etc/prometheus/prometheus.yml"
    restart_policy: always
    state: started
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/metrics"]
      interval: 20s
      retries: 10
      start_period: 60s
      timeout: 10s

- name: Prometheus role completed
  ansible.builtin.meta: flush_handlers
