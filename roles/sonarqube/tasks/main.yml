- name: Check if SonarQube container exists
  community.docker.docker_container_info:
    name: "{{ sonarqube_container_name }}"
  register: sonarqube_container_status
  failed_when: false

- name: Stop SonarQube container if it exists
  community.docker.docker_container:
    name: "{{ sonarqube_container_name }}"
    state: stopped
    image: "sonarqube:{{ sonarqube_version }}"
  when: sonarqube_container_status.container is defined

- name: Remove SonarQube container if it exists
  community.docker.docker_container:
    name: "{{ sonarqube_container_name }}"
    state: absent
    image: "sonarqube:{{ sonarqube_version }}"
  when: sonarqube_container_status.container is defined

- name: Check if SonarQube volume exists
  community.docker.docker_volume_info:
    name: "{{ sonarqube_volume_name }}"
  register: sonarqube_volume_status
  failed_when: false

- name: Create SonarQube Docker volume if not exists
  community.docker.docker_volume:
    name: "{{ sonarqube_volume_name }}"
  when: sonarqube_volume_status.volume is not defined

- name: Deploy SonarQube container with health check and network
  community.docker.docker_container:
    name: "{{ sonarqube_container_name }}"
    image: "sonarqube:{{ sonarqube_version }}"
    networks:
      - name: sonarqube_network
    ports:
      - "{{ sonarqube_http_port }}:9000"
    volumes:
      - "{{ sonarqube_volume_name }}:/opt/sonarqube/data"
    env:
      SONAR_JDBC_URL: "jdbc:postgresql://{{ sonarqube_db_host }}:{{ sonarqube_db_port }}/{{ sonarqube_db_name }}"
      SONAR_JDBC_USERNAME: "{{ sonarqube_db_user }}"
      SONAR_JDBC_PASSWORD: "{{ sonarqube_db_password }}"
    restart_policy: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    state: started

- name: Verify SonarQube container is running
  community.docker.docker_container_info:
    name: "{{ sonarqube_container_name }}"
  register: sonarqube_container_info
  failed_when: sonarqube_container_info.container.State.Running != true

- name: SonarQube role completed
  ansible.builtin.meta: flush_handlers
